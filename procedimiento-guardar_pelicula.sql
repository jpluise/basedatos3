 CREATE table PELICULA (ID_PELICULA INTEGER , 
    TITULO varchar2 (120), 
    SINOPSIS varchar2(120),
    CLASIFICACION varchar2(5),
    constraint PK_ID_PELICULA primary key (ID_PELICULA)
    );
    
    DESCRIBE PELICULA;
    
    CREATE TABLE HORARIOS (ID_HORARIO INTEGER,
     ID_PELICULA INTEGER,
     HORARIO VARCHAR2(8),
     CONSTRAINT PK_ID_HORARIO PRIMARY KEY(ID_HORARIO),
     CONSTRAINT FK1_ID_PELICULA FOREIGN KEY(ID_PELICULA) REFERENCES PELICULA(ID_PELICULA)
     );
    describe HORARIOS;
    
    CREATE TABLE SALA (ID_SALA integer,
    ID_PELICULA INTEGER,
    NUM_SALA varchar2 (8),
    constraint PK_ID_SALA primary key (ID_SALA),
    constraint FK2_ID_PELICULA FOREIGN KEY  (ID_PELICULA) REFERENCES PELICULA (ID_PELICULA)
    );
    
     CREATE sequence SEC_PELICULA
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;
    
    
    
    ---PROCEDIMINETO ALMACENADOS, ESTRUCTURA CURSOR----
    --PROCEDIMIENTO ALMACENADO  ES UN OBJETO DE BASE DE DATOS MUY POTENTE POR QUE ENCAPSULA LOGICA DE PROGRAMACION DE BASE DE DATOS Y UNA VEZ GENERADO EL PROCEDIMINETO PUEDE SER INVOCADO POR CUALQUIER
    --LENGUAJE EXTERNO POR EJEMPLO: JAVA, C++, PHP, C, RUBY PYTON. (ES COMO UNA FUNCION)..  STORED PROCEDURE
    
    SET SERVEROUTPUT ON;
    
    -- (OR REPPLACE) PERMITE RECOMPILARLO YA QUE SE COMPILO POR PRIMERA VEZ--
    CREATE OR REPLACE PROCEDURE HOLA_MUNDO( NOMBRE  IN VARCHAR2)
    --DECLARACION DE VARIABLES LOCALES
    AS
    --CUERPO DE BEGIN LOGICA
    BEGIN
    DBMS_OUTPUT.PUT_LINE('HOLA COM ESTAS'||NOMBRE);
    END;
    /
    
    BEGIN
    HOLA_MUNDO('JUAN CARLOS');
    END;
    /
    
    DECLARE
    --OTORGA LA SALIDA
    VALOR number;
    --PROCEDIMIENTO
    BEGIN
    SUMA(12,8.5,VALOR);
    DBMS_OUTPUT.PUT_LINE('LA SUMA ES: ' ||VALOR);
    END;
    /
    
    ---STORED PROCEDURE= CURSORES = UN CURSOR ES "CUALQUIER SETENCIA SQL" LO DISTINITO ES ESTO:, CHECAR CADA UNO DE MIS CAMPOS QUE ES LO QUE ESTA HACIENDO TRABAJANDO. SELECT PERSONALIZADO, BARRIENDO LINEA OR LINEA, ES UN OBSERVADOR "MITITULO INTO" SETENCIA CONVENCIONAL
    --SELECT * FROM PELICULA;
    --SELECT MITITULO INTO TITULO FROM PELICULA;
    
    
    
    
    
    
    secuencias-------------------------------------------------------------------------------------------------
    
    CREATE OR REPLACE PROCEDURE GUARDAR_PELICULA 
(
  MY_ID_PELICULA OUT NUMBER  
, MY_TITULO IN VARCHAR2  
, MY_SINOPSIS IN VARCHAR2  
, MY_CLASIFICACION IN VARCHAR2  
) AS

BEGIN
  SELECT SEC_PELICULA.NEXTVAL INTO MY_ID_PELICULA FROM DUAL;
  --DUAL UNA TALBA VIRTUAL
  INSERT INTO PELICULA VALUES(MY_ID_PELICULA, MY_TITULO, MY_SINOPSIS, MY_CLASIFICACION);
  
END GUARDAR_PELICULA;

--------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE SUMA 
(
  PRIMERO IN NUMBER  
, SEGUNDO IN NUMBER  
, RESULTADO OUT NUMBER  
) AS 
BEGIN
RESULTADO:=PRIMERO+SEGUNDO;
END SUMA;
-------------------------------------------------------------------------------

create or replace 
PROCEDURE HOLA_MUNDO( NOMBRE  IN VARCHAR2)
    --DECLARACION DE VARIABLES LOCALES
    AS
    --CUERPO DE BEGIN LOGICA
    BEGIN
    DBMS_OUTPUT.PUT_LINE('HOLA COM ESTAS'||NOMBRE);
    END;
    
    ------------------------------------------------------------------------------------------------------
    
    CREATE table PELICULA (ID_PELICULA INTEGER, 
    TITULO varchar2 (120), 
    SINOPSIS varchar2(120),
    CLASIFICACION varchar2(5),
    constraint PK_ID_PELICULA primary key (ID_PELICULA)
    );
    
  
----------------------------------------------------------------------------------------------------    
   CREATE sequence SEC_PELICULA
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;
    
  -------------------------------------------------------------------------------------------------
    
    CREATE OR REPLACE PROCEDURE GUARDAR_PELICULA 
(
  MY_ID_PELICULA OUT NUMBER  
, MY_TITULO IN VARCHAR2  
, MY_SINOPSIS IN VARCHAR2  
, MY_CLASIFICACION IN VARCHAR2  
) AS

BEGIN
  SELECT SEC_PELICULA.NEXTVAL INTO MY_ID_PELICULA FROM DUAL;
  --DUAL UNA TALBA VIRTUAL
  INSERT INTO PELICULA VALUES(MY_ID_PELICULA, MY_TITULO, MY_SINOPSIS, MY_CLASIFICACION);
  
END GUARDAR_PELICULA;
/
-------------------------------------------------------------------------------------------------------------


DECLARE 
VALOR INTEGER;
begin
GUARDAR_PELICULA(VALOR,'EL RENACIDO','MASO O MENOS','B15');
END;
/

 select * from pelicula;
---------------------------------------------------------------------------------------------6/02/2016
CREATE TABLE CLIENTE (ID_CLIENTE INTEGER,
NOMBRE VARCHAR2(30),
SUELDO_BASE FLOAT, 
EMAIL VARCHAR2(30), 
CONSTRAINT PK_ID_CLIENTE PRIMARY KEY (ID_CLIENTE));

CREATE TABLE DIRECCION (ID_DIRECCION INTEGER,
ID_CLIENTE INTEGER,
CALLE VARCHAR2(30),
NUMERO_BASE INTEGER, 
CP INTEGER, 
MUNICIPIO VARCHAR2(30),


CONSTRAINT PK_ID_DIRECCION PRIMARY KEY (ID_DIRECCION),
CONSTRAINT FK1_ID_CLIENTE FOREIGN KEY (ID_CLIENTE)
REFERENCES CLIENTE(ID_CLIENTE));


create sequence sec_CLIENTE
start with 1
increment by 1
nomaxvalue;



create sequence sec_DIRECCION
start with 1
increment by 1
nomaxvalue;

---SECUENCIA
CREATE OR REPLACE PROCEDURE GUARDAR_CLIENTE(MY_ID_CLIENTE  OUT INTEGER,
MY_NOMBRE IN VARCHAR2, MY_SUELDO_BASE IN FLOAT, MY_EMAIL IN VARCHAR2)
AS
BEGIN
SELECT SEC_CLIENTE.NEXTVAL INTO MY_ID_CLIENTE FROM DUAL;
INSERT INTO CLIENTE VALUES(MY_ID_CLIENTE,MY_NOMBRE,MY_SUELDO_BASE,MY_EMAIL);
END;
/

CREATE OR REPLACE PROCEDURE GUARDAR_CLIENTE_DIRECCION(MY_ID_CLIENTE OUT INTEGER,
MY_ID_DIRECCION OUT INTEGER, MY_NOMBRE IN VARCHAR2, MY_SUELDO_BASE IN FLOAT,
MY_EMAIL IN VARCHAR2, MY_CALLE IN VARCHAR2,MY_NUMERO_BASE IN INTEGER, 
MY_CP IN INTEGER, MY_MUNICIPIO IN VARCHAR2) AS
BEGIN
GUARDAR_CLIENTE(MY_ID_CLIENTE, MY_NOMBRE, MY_SUELDO_BASE,MY_EMAIL);
SELECT SEC_DIRECCION.NEXTVAL INTO MY_ID_DIRECCION FROM DUAL;
INSERT INTO DIRECCION VALUES(MY_ID_DIRECCION, MY_ID_CLIENTE, MY_CALLE,
MY_NUMERO_BASE,MY_CP, MY_MUNICIPIO);
END;
/
---------------------------------------------------------------------------------06/02/2016

--cursores: cualquier setencia sql
--dos tipos OCURRENCIA UNICA Y OCURRENCIA MULTIPLE
CREATE TABLE SIMPLE1 (ID_SIMPLE INTEGER, EDAD INTEGER, NOMBRE VARCHAR2 (40));
-- LA LLENAMOS CON INFORMACION
--DESCRIBE SIMPLE1;

DECLARE

mi_nombre varchar2 (40);
begin
select nombre into mi_nombre
from simple1 
where edad=21;
dbms_output.put_line(mi_nombre);
end;
/


MI_EDAD INTEGER;
BEGIN 
MI_EDAD:=20;
FOR I IN 1..20 LOOP
MI_EDAD:=MI_EDAD+I;
INSERT INTO SIMPLE1 VALUES (I, MI_EDAD, 'LUIS PICAZO');
END LOOP;
END;
/

SELECT *  FROM SIMPLE1;

--CURSOR SIMPLE DE UNA SOLA PCURRENCIA 
--CREAR UN CURSOR  QUE BUSQUE EL ID QUE VALGA 21 Y SUSTITUIR EL NOMBRE POR EL TUTO
--INTO ESTO CONVIERTE EL SELECT EN CURSOR

UPDATE SIMPLE1 SET NOMBRE='XXX' where EDAD=21;

SET SERVEROUTPUT ON;
declare
MI_NOMBRE VARCHAR2 (40);
begin
select NOMBRE INTO MI_NOMBRE
FROM SIMPLE1 
where EDAD=21;
dbms_output.put_line(MI_NOMBRE);
END;
/

DELETE FROM SIMPLE1;

INSERT INTO SIMPLE1 VALUES(1,21,'LUIS');
  
INSERT INTO SIMPLE1 VALUES (2,22,'ANA');
   
INSERT INTO SIMPLE1 VALUES (2,23,'PEDRO'); 
---CURSOR
